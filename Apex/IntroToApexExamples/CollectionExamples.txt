public class CollectionExamples {
/*
 * List<Integer> myGrades = new List<Integer>();

// Add items to a list
myGrades.add(75);
myGrades.add(90);
myGrades.add(70);
myGrades.add(80);
myGrades.add(90);
myGrades.add(90);

System.debug('myGrades: ' + myGRades);
// Lists start at index 0, not 1
System.debug('First grade: ' + myGRades[0]);

//for (Integer i = 0; i < 5; i++) {
//    System.debug('Grade ' + (i+1) + ': ' +  myGrades[i] );
//}

// Use List.size() to dynamically get the size of the List
for (Integer i = 0; i < myGrades.size(); i++) {
    System.debug('Grade ' + (i+1) + ': ' +  myGrades[i] );
}

// Setting list values upon instantiation
List<String> associates = new List<String> {'Pilar', 'Hannah', 'Lynette', 'David'};
for (Integer i = 0; i < associates.size(); i++) {
    System.debug(associates[i]);
} 

// Set - unordered collection with NO duplicates
Set<String> associateSet = new Set<String> {'Pilar', 'Hannah', 'Lynette', 'David'};
SYstem.debug('associateSet: ' + associateSet);
associateSet.add('Pilar');
System.debug('associateSet: ' + associateSet);


// Maps
Map<String, Integer> monthsToDays = new Map<String, Integer>();
monthsToDays.put('Jan', 31);
monthsToDays.put('Feb', 28);
System.debug('monthsToDays: ' + monthsToDays);
System.debug('Jan: ' + monthsToDays.get('Jan'));

List<Integer> myGrades = new List<Integer>();

// Add items to a list
myGrades.add(75);
myGrades.add(90);
myGrades.add(70);
myGrades.add(80);
myGrades.add(90);
myGrades.add(90);

// Use List.size() to dynamically get the size of the List
for (Integer i = 0; i < myGrades.size(); i++) {
    System.debug('Grade ' + (i+1) + ': ' +  myGrades[i] );
}

// For loop - List or Set teration for Loops 
for (Integer i : myGrades) {
    System.debug(i);
}

List<Account> accountList = new List<Account>();

for (Integer i = 0; i < accountList.size(); i++) {
    accountList[i].State = 'California';

    
    // GO through pseudo code for this
    // Stress pseudo-code importance with tallestHeight example
for (Account a : accountList) {
    a.BillingState = 'Virginia';
}

    
    
 * */
}